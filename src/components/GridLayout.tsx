// Generated by CSS Grid Editor
import styled from "styled-components";

type Props = {
  paddingLeft?: boolean;
  paddingRight?: boolean;
};
export default styled.div`
  height: 100%;
  display: grid;
  grid-template-columns:
    ${(props: Props) => (props.paddingLeft ? "10vw" : 0)}
    280px 10px 420px 10px 420px 10px 420px 10px 280px 10px 280px 10px 280px 10px 420px 10px
    ${(props: Props) => (props.paddingRight ? "10vw" : 0)};
  grid-template-rows: 140px 10px 140px 10px 140px 10px 140px;
  grid-template-areas:
    "p1 g1 g1 g1 . g5 . g7 . g10 . g11 .   g12 . g15 . p2"
    "p1 g1 g1 g1 . .  . .  . g10 . g11 .   g12 . g15 . p2"
    "p1 g1 g1 g1 . g6 . g8 . g10 . g11 .   g12 . g15 . p2"
    "p1 .  .  .  . g6 . .  . g10 . .   .   .   . .   . p2"
    "p1 g2 .  g4 . g6 . g9 . g10 . g13 g13 g13 . g16 . p2"
    "p1 .  .  g4 . g6 . g9 . g10 . .   .   .   . g16 . p2"
    "p1 g3 .  g4 . g6 . g9 . g10 . g14 g14 g14 . g16 . p2";
`;

type AreaProps = {
  gridArea: string;
};
export const Area = styled.div`
  grid-area: ${(props: AreaProps) => props.gridArea};
  display: flex;
`;

type PaddingProps = {
  gridArea: string;
};
export const Padding = styled.div`
  grid-area: ${(props: PaddingProps) => props.gridArea};
`;
